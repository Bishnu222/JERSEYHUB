// Mocks generated by Mockito 5.4.5 from annotations
// in jerseyhub/test/unit/order/get_all_orders_usecase_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:jerseyhub/core/error/failure.dart' as _i5;
import 'package:jerseyhub/features/order/domain/entity/order_entity.dart'
    as _i6;
import 'package:jerseyhub/features/order/domain/repository/order_repository.dart'
    as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [OrderRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockOrderRepository extends _i1.Mock implements _i3.OrderRepository {
  MockOrderRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.OrderEntity>>>
      getAllLocalOrders() => (super.noSuchMethod(
            Invocation.method(
              #getAllLocalOrders,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.OrderEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.OrderEntity>>(
              this,
              Invocation.method(
                #getAllLocalOrders,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.OrderEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>> getLocalOrderById(
          String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getLocalOrderById,
          [orderId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.OrderEntity>(
          this,
          Invocation.method(
            #getLocalOrderById,
            [orderId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>> createLocalOrder(
          _i6.OrderEntity? order) =>
      (super.noSuchMethod(
        Invocation.method(
          #createLocalOrder,
          [order],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.OrderEntity>(
          this,
          Invocation.method(
            #createLocalOrder,
            [order],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>> updateLocalOrderStatus(
    String? orderId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateLocalOrderStatus,
          [
            orderId,
            status,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.OrderEntity>(
          this,
          Invocation.method(
            #updateLocalOrderStatus,
            [
              orderId,
              status,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteLocalOrder(String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteLocalOrder,
          [orderId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteLocalOrder,
            [orderId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.OrderEntity>>>
      getAllRemoteOrders() => (super.noSuchMethod(
            Invocation.method(
              #getAllRemoteOrders,
              [],
            ),
            returnValue: _i4
                .Future<_i2.Either<_i5.Failure, List<_i6.OrderEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.OrderEntity>>(
              this,
              Invocation.method(
                #getAllRemoteOrders,
                [],
              ),
            )),
          ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.OrderEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>> getRemoteOrderById(
          String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getRemoteOrderById,
          [orderId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.OrderEntity>(
          this,
          Invocation.method(
            #getRemoteOrderById,
            [orderId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>> createRemoteOrder(
          _i6.OrderEntity? order) =>
      (super.noSuchMethod(
        Invocation.method(
          #createRemoteOrder,
          [order],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.OrderEntity>(
          this,
          Invocation.method(
            #createRemoteOrder,
            [order],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>> updateRemoteOrderStatus(
    String? orderId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateRemoteOrderStatus,
          [
            orderId,
            status,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.OrderEntity>(
          this,
          Invocation.method(
            #updateRemoteOrderStatus,
            [
              orderId,
              status,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteRemoteOrder(
          String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteRemoteOrder,
          [orderId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteRemoteOrder,
            [orderId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, List<_i6.OrderEntity>>> getAllOrders() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAllOrders,
          [],
        ),
        returnValue:
            _i4.Future<_i2.Either<_i5.Failure, List<_i6.OrderEntity>>>.value(
                _FakeEither_0<_i5.Failure, List<_i6.OrderEntity>>(
          this,
          Invocation.method(
            #getAllOrders,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, List<_i6.OrderEntity>>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>> getOrderById(
          String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getOrderById,
          [orderId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.OrderEntity>(
          this,
          Invocation.method(
            #getOrderById,
            [orderId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>> createOrder(
          _i6.OrderEntity? order) =>
      (super.noSuchMethod(
        Invocation.method(
          #createOrder,
          [order],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.OrderEntity>(
          this,
          Invocation.method(
            #createOrder,
            [order],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>> updateOrderStatus(
    String? orderId,
    String? status,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateOrderStatus,
          [
            orderId,
            status,
          ],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>.value(
            _FakeEither_0<_i5.Failure, _i6.OrderEntity>(
          this,
          Invocation.method(
            #updateOrderStatus,
            [
              orderId,
              status,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, _i6.OrderEntity>>);

  @override
  _i4.Future<_i2.Either<_i5.Failure, void>> deleteOrder(String? orderId) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteOrder,
          [orderId],
        ),
        returnValue: _i4.Future<_i2.Either<_i5.Failure, void>>.value(
            _FakeEither_0<_i5.Failure, void>(
          this,
          Invocation.method(
            #deleteOrder,
            [orderId],
          ),
        )),
      ) as _i4.Future<_i2.Either<_i5.Failure, void>>);
}
